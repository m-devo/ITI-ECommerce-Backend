paths:
  /api/admin/users/allusers:
    get:
      summary: Get all users (Admin only)
      description: Retrieve a paginated list of all users with optional search filters.
      tags: [Admin Users]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: Number of users per page
        - in: query
          name: name
          schema:
            type: string
          description: Filter by user name (partial match)
        - in: query
          name: email
          schema:
            type: string
          description: Filter by user email (partial match)
        - in: query
          name: role
          schema:
            type: string
            enum: [user, admin, author]
          description: Filter by user role
      responses:
        "200":
          description: Successfully retrieved list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: integer
                    example: 50
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        "404":
          description: No users found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/admin/users/update/{id}:
    get:
      summary: Get user by ID (Admin only)
      tags: [Admin Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "200":
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "400":
          description: Invalid ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Update user by ID (Admin only)
      tags: [Admin Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Aya Hamed"
                email:
                  type: string
                  example: "ayahamed@example.com"
                role:
                  type: string
                  enum: [user, admin, author]
                  example: "user"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete user by ID (Admin only)
      description: Delete a specific user and send account deletion email.
      tags: [Admin Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
